[project]
name = "aiocluster"
version = "0.1.0"
description = "aiocluster"
readme = "README.md"
requires-python = ">=3.13"
dependencies = ["protobuf>=5.28.3"]
license = { file = "LICENSE" }
keywords = ["gossip", "chitchat", "aiocluster", "ScuttleButt"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Framework :: AsyncIO",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python :: 3",
  "Topic :: System :: Distributed Computing",
]
authors = [{ name = "Nickolai Novik", email = "nickolainovik@gmail.com" }]

[dependency-groups]
dev = [
  "mypy-protobuf>=3.6.0",
  "ipdb>=0.13.13",
  "ipython>=8.29.0",
  "mypy>=1.13.0",
  "pytest>=8.3.3",
  "ruff>=0.7.3",
  "pytest-cov>=6.0.0",
  "pytest-asyncio>=0.24.0",
]

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["E", "W", "UP", "B", "SIM", "I", "ASYNC", "FBT", "A", "LOG"]

[tool.ruff.lint.per-file-ignores]
# skip lints for auto generated protobuf files
"aiocluster/protos/messages_pb2.py" = ["ALL"]
"aiocluster/protos/messages_pb2.pyi" = ["ALL"]

[tool.ruff.format]
# skip formating for auto generated protobuf files
exclude = [
  "aiocluster/protos/messages_pb2.py",
  "aiocluster/protos/messages_pb2.pyi",
]

[tool.ruff.lint.isort]
force-single-line = true
split-on-trailing-comma = true

[tool.coverage.run]
branch = true

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
  # Don't complain about missing debug-only code:
  "def __repr__",
  "if self\\.debug",

  # Don't complain if tests don't hit defensive assertion code:
  "raise AssertionError",
  "raise NotImplementedError",

  # Don't complain if non-runnable code isn't run:
  "if 0:",
  "if __name__ == .__main__.:",

  # Don't complain about abstract methods, they aren't run:
  "@(abc\\.)?abstractmethod",
]

ignore_errors = true
